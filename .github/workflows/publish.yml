name: "Publish libraries"

on:
  push:
    branches:
    - main
    - release/**
    paths:
    - 'arrow-libs/**'
    - '.github/**'

jobs:
  publish:

    env:
      BASEDIR: ${{github.workspace}}/arrow-libs
      JAVA_OPTS: -Xms512m -Xmx1024m
      SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
      SONATYPE_PWD: ${{ secrets.SONATYPE_PWD }}
      ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_signingKey }}
      ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_signingPassword }}
      GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: "Setup"
      run: brew install grep
    - name: "Set env"
      run: ${GITHUB_WORKSPACE}/.github/scripts/set-env.sh
    - name: "Show env"
      run: ${GITHUB_WORKSPACE}/.github/scripts/show-env.sh
    - name: "Publish"
      working-directory: arrow-libs
      run: |
        ./gradlew publish
        echo "$(cat $BASEDIR/gradle.properties | grep VERSION_NAME | cut -d'=' -f2) deployed!"
    - name: "Create tag"
      if: env.NEW_RELEASE_VERSION_EXISTS == '1'
      run: |
        git remote set-url origin https://arrow-kt:$GITHUB_TOKEN@github.com/arrow-kt/arrow.git
        git config --global user.email "arrow-kt@users.noreply.github.com"
        git config --global user.name "arrow-kt"
        git tag -a $RELEASE_VERSION -m "Release $RELEASE_VERSION"
        git push origin $RELEASE_VERSION
    - name: "Create release notes"
      if: ${{ env.NEW_RELEASE_VERSION_EXISTS == '1' && github.ref == 'refs/heads/main' }}
      run: ${GITHUB_WORKSPACE}/.github/scripts/create-release-notes.sh
