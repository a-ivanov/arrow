buildscript {
    ext {
        def customProperties = new Properties()
        customProperties.load(file("../arrow-libs/gradle.properties").newInputStream())
        customProperties.each { key, value -> set(key, value) }
        apply from: "../arrow-libs/gradle/setup.gradle"
    }
    dependencies {
        classpath "io.arrow-kt:arrow-ank-gradle:$VERSION_NAME"
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "$KOTLIN_VERSION"
    id "org.jetbrains.kotlin.kapt" version "$KOTLIN_VERSION"
    id "org.jlleitschuh.gradle.ktlint" version "$KTLINT_GRADLE_VERSION"
}

apply from: "../arrow-libs/gradle/main.gradle"
apply from: "../arrow-libs/gradle/subproject.gradle"

dependencies {
    implementation "io.arrow-kt:arrow-optics:$VERSION_NAME"
    implementation "io.arrow-kt:arrow-core:$VERSION_NAME"
    implementation "io.arrow-kt:arrow-fx-coroutines:$VERSION_NAME"
    implementation "io.arrow-kt:arrow-fx-stm:$VERSION_NAME"
    compileOnly "org.jetbrains.kotlin:kotlin-reflect:$KOTLIN_VERSION"

    kapt "io.arrow-kt:arrow-meta:$VERSION_NAME"
}

apply plugin: 'ank-gradle-plugin'

ank {
    source = file("${rootDir}/docs")
    target = file("${rootDir}/build/site")
    classpath = sourceSets.main.runtimeClasspath
}
